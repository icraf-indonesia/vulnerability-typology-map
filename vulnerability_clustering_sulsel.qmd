---
title: "Assessing and Characterizing Climate Vulnerabilities in Agriculture-Based Livelihoods: South Sulawesi"
format: 
  html:
    code-overflow: wrap
    code-fold: true
    toc: true
    number-sections: true
editor: visual
project:
  type: website
  output-dir: docs
editor_options: 
  chunk_output_type: inline
comments:
  utterances:
    repo: icraf-indonesia/vulnerability-typology-map
---

# Introduction

::: panel-tabset
## Abstrak

Penghidupan berbasis pertanian kini makin rentan terhadap perubahan iklim, tetapi informasi mengenai potensi resiko dan kebutuhan adaptasi mereka masih sangat terbatas. Bahan ajar ini disusun untuk mengisi kekosongan ini dengan mengevaluasi berbagai jenis kerentanan yang mempengaruhi mata pencaharian berbasis pertanian di tingkat provinsi. Kami melakukan penilaian kerentanan untuk mengidentifikasi risiko utama serta akar penyebabnya, dan potensi adaptasi, dengan fokus pada peningkatan taraf hidup, keberlanjutan produksi komoditas-komoditas kunci, dan pengelolaan lahan secara menyeluruh.

Mengingat keanekaragaman kondisi di masing-masing provinsi, kami memfokuskan perhatian pada kecamatan-kecamatan dengan fitur biofisik dan sosial-ekonomi yang mirip. Ini membantu kami mempermudah tugas dalam mengidentifikasi risiko yang identik antar kecamatan. Kami mendefinisikan area-area homogen ini, atau 'tipologi,' dengan menggunakan pengelompokan K-means. Pengelompokan ini didasarkan pada komposit dari indikator biofisik dan sosial-ekonomi. Untuk mempermudah proses pengelompokan, kami menggunakan analisis PCA untuk menyederhanakan dimensi data.

## Abstract

Smallholder farmers are increasingly vulnerable to climate change, yet little is known about their specific risks and adaptation requirements. Our study aims to address this gap by examining the different vulnerabilities affecting agriculture-based livelihoods at the provincial level. We conducted climate vulnerability assessments to identify key risks and their root causes, as well as possible mitigation measures, with a focus on sustaining livelihoods, key commodities production, and overall land management.

Considering the diverse conditions of the study area, we narrowed our focus to locations with similar biop hysical and socio-economic features. This helped us streamline the task of spotting common risks across communities. We defined these homogeneous areas, or 'typologies,' using K-means clustering. The clustering was based on a composite of biophysical and socio-economic indicators. To make the clustering process more precise, we applied PCA analyses to simplify the data dimensions.

## Objective

We aimed to identify homogeneous areas, or 'typologies', with similar biophysical and socio-economic features across South Sulawesi Province, using K-means clustering on PCA-simplified data to infer common risks across communities.
:::

# Study area & Data

::: panel-tabset
## Study area

The South Sulawesi province, located in the southern peninsula of Sulawesi, Indonesia, spans an area of 46,717 square kilometres. The province is characterised by a north-south chain of mountains, topped by volcanic cones and bisected midway by the Tempe Lake valley. The climate is characterised by high rainfall throughout the year, typical of tropical rainforest climates.

South Sulawesi is home to a population of approximately 8.851 million people as of 2019. The province is characterised by a moderate level of income inequality, as reflected in the Gini ratios for its districts, which ranged from around 0.32 to 0.40 in 2022. The province scored 7.22 on the Human Development Index in 2022.

The Gross Domestic Product (GDP) of South Sulawesi was approximately 605.145 billion Indonesian Rupiah in 2022, which is equivalent to around 4,075 million US dollars. This places South Sulawesi as the 9th largest economy among the provinces in Indonesia.

Agriculture plays a significant role in the province's economy, with an estimated one million farmers operating in South Sulawesi, according to the 2018 Survei Pertanian Antar Sensus (SUTAS) conducted by the Badan Pusat Statistik (BPS). Major agricultural products include rice, corn (maize), copra (dried coconut meat), coffee, spices, vegetable oil, sugarcane, soybeans, and sweet potatoes. The forests of the region yield valuable resources such as teak and rattan, and deep-sea fishing also contributes to the local economy.

## Data Collection

Understanding the vulnerability of smallholder farmers to climate change involves examining a variety of biophysical and socio-economic factors. These factors, represented as grid layers or proxies, are chosen based on literature reviews, field observations, and expert insights. However, not all potential variables are readily available or of sufficient quality for analysis.

These factors are organised into five categories, known as livelihood capitals: natural, physical, human, social, and financial. Each represents a unique aspect that can influence a farmer's vulnerability to climate change.

-   Natural capital includes essential natural resources like forests, rivers, and arable land, as well as climate factors such as temperature and precipitation.

-   Physical capital refers to infrastructure and production resources, including proximity to plantations, roads, and processing facilities.

-   Human capital encompasses the population's knowledge, skills, and health, reflected in variables like village population and unemployment rate.

-   Social capital represents the social networks that provide support and resources to farmers, indicated by factors like the percentage of smallholder agricultural areas in a village.

-   Financial capital involves financial resources, income diversity, and access to credit, represented by variables such as farm size and crop yield.

## Vulnerability indicators with descriptions and data sources

```{r Table 1}
#| echo: false
#| warning: false
library(readxl)
library(corrplot)
library(caret)
library(gtExtras)
library(naniar)
library(knitr)
library(tidyr)
library(leaflet)
library(terra)
library(sf)
library(dplyr)
library(readr)
library(kableExtra)

read_csv("data/vulnerability_indicators.csv") |>
  kbl() |> 
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T,  full_width = F) |> 
    column_spec(2, width = "30em") |> 
    scroll_box(width = "1000px", height = "800px")
```
:::

## Pipeline

A flowchart includes steps in performing PCA. ![Steps in performing PCA](data/workflow.png)

## Loading the data

**Reading the Data:** We have an Excel file with lots of information. Each row in the file gives us details about a village, and the columns tell us about different factors that might make the village more or less vulnerable to climate change. There's also a special sheet in the Excel file that explains what all these factors mean, their unique IDs, and how they're measured.

### The main dataset `raw_df`

```{r Read raw data}
#| warning: false


df_raw <-
  read_xlsx("data/analisa_tipologi_sulsel.xlsx",
            sheet = "fin_copas") |> 
  janitor::clean_names() |> dplyr::select(-c(idkec_2, idkec_3)) |> 
  mutate(across(-c(idkec_dum, sumber, nmprov, nmkab, nmkec), as.numeric))
```

```{r a subset of columns of the raw data}
#| warning: false
#| message: false
# Select a subset of columns for clarity
df_selected <- df_raw|>
  dplyr::select(1,7,8,10,11, 12) |> head()

# Create the table using gt
df_selected|>
  gt()|>
  tab_header(
    title = "A sample of the Data"
  )|>
  cols_label(
    idkec_dum = "ID",
    nmkab = "District",
    nmkec = "Sub-district",
    distance_to_plantation = "Dist. to Plantation (m)",
    distance_to_road = "Dist. to Road (m)",
    distance_to_commodity_processing_factory = "Dist. to Comm.Proc Factory (m)"
  )|>
  fmt_number(
    columns = c(distance_to_plantation, distance_to_road, distance_to_commodity_processing_factory),
    decimals = 2
  )
```

Now we have a big table called `df_raw`. This table contains information like the name of the province, district, sub-district, and village. It also includes data about the village's area, population density, and lots of other numerical factors. We then standardized the selected features/predictors to unit variance and zero mean and combined them into one layer.

```{r transform and standardise the data}
# Remove unnecessary columns from the original dataframe 'df_raw'
# The 'dplyr::select()' function is used to exclude these columns
df_gt <- df_raw |> 
  dplyr::select(-c(idkec_dum, kdprov, sumber, nmprov, nmkab, nmkec, periode, kdkab, kdkec, prec_change))

df_col_unstandardise <- df_raw |> dplyr::select(prec_change)

# Add a small constant (0.001) to every value in 'df_gt'
# This is often done to allow for log transformations of data that includes zeros
df_gt_plus <- df_gt + 0.001



# Log-transform and scale the data
# 1. 'as_tibble()' converts the dataframe to a tibble for easier manipulation
# 2. 'mutate_all(.funs = log10)' applies the base-10 logarithm to all columns
# 3. 'scale()' standardizes each column so that it has mean=0 and sd=1
scaled_df <-
  df_gt_plus |> as_tibble() |> mutate_all(.funs = log10) |> bind_cols(df_col_unstandardise) |>  scale(center = TRUE, scale = TRUE)

# Add back the columns that were removed earlier to create a complete, scaled dataframe
# 'bind_cols()' binds the selected columns from 'df_raw' and the scaled columns from 'scaled_df'
scaled_df_complete <- df_raw |> 
  dplyr::select(c(idkec_dum, kdprov, sumber, nmprov, nmkab, nmkec, periode, kdkab, kdkec)) |>  
  bind_cols(scaled_df)

# Remove the column 'korban_jiwa_kebakaran_hutan_dan_lahan_2018_2019' from the complete, scaled dataframe
scaled_df_complete_temp <- scaled_df_complete |> 
  dplyr::select(-korban_jiwa_kebakaran_hutan_dan_lahan_2018_2019, -buffer_to_500m_irigated_land)

```

# Preparing the data

Before diving into the PCA, let's ensure that the data meets the necessary requirements.

## Check for missing values

```{r Remove incomplete kecamatans}
# Check for missing values
missing_data <- sapply(scaled_df_complete_temp, function(x) sum(is.na(x)))

# print missing data\
scaled_df_complete_temp|> filter_all(any_vars(is.na(.))) |>   dplyr::select("ID Kecamatan" = 1, "Nama Kabupaten" = 5, "Nama Kecamatan " = 6) |> kable(caption = "Kecamatan dengan data tidak lengkap")

#remove missing data
scaled_df_complete_temp <- scaled_df_complete_temp[complete.cases(scaled_df_complete_temp), ]

```

## Exclude identifiers

```{r display the data ready for PCA}
#| warning: false
#| messages: false
df_pre_pca <- scaled_df_complete_temp |> 
  select(-c(idkec_dum, sumber, kdprov, nmprov, nmkab, nmkec, periode, kdkab, kdkec))

df_pre_pca |> kbl(caption = "Input data for a PCA Analysis") |>   kable_paper()|>
  scroll_box(width = "1000px", height = "500px")
```

<!-- ## Exclude constant or near constant columns -->

<!-- In Principal Component Analysis (PCA), you want to reduce the dimensionality of your dataset to uncover patterns and make visualization easier. However, if some variables (columns) have constant or near-constant values across the observations, they can't contribute to explaining the variability in your data. Such columns should be removed before performing PCA. Here's some code that identify these columns: -->

No missing data is found. Handle missing values if any, possibly through imputation

## Identify multi-collinear variables

Compute the correlation matrix and identify highly correlated variables:

```{r display correlation matrix}
#| warning: false
#| messages: false
#df_pre_pca_abb <- df_pre_pca
# Abbreviate column names using R's built-in abbreviate function
#abbrev_colnames <- abbreviate(colnames(df_pre_pca_abb))

# Assign the abbreviated names back to the dataframe
#colnames(df_pre_pca_abb) <- abbrev_colnames

# Recalculate and plot the correlation matrix
cor_matrix <- cor(df_pre_pca) |> round(digits = 2)

# Convert the matrix to a data frame
cor_matrix_df <- as.data.frame(cor_matrix)

# Add row names as a new column
cor_matrix_df$Predictors <- rownames(cor_matrix)

# Move the 'RowNames' column to the first position
cor_matrix_df <- cor_matrix_df|> select(Predictors, everything())



# Create the gt table
cor_matrix_df|>
  gt()|>
  data_color(
    columns = -Predictors,  # Exclude the 'RowNames' column from colorization
    colors = scales::col_numeric(
      palette = c("darkred", "white", "darkblue"),
      domain = c(-1, 1)
    )
  ) |> tab_options(container.overflow.x = TRUE, container.overflow.y = TRUE)


```

```{r display multi-collinear variables}
# Set a threshold value for correlation
threshold <- 0.8

# Find the indices of the variables that are highly correlated according to the specified threshold in the correlation matrix 'cor_matrix.'
# This will be used to remove the highly correlated variables from 'df_pre_pca.'
highly_correlated <- findCorrelation(cor(df_pre_pca), cutoff = threshold, names = FALSE)

# If you also need the names of the highly correlated variables, you can extract them using the indices.
highly_correlated_names <- colnames(cor(df_pre_pca))[highly_correlated]


# # Remove the columns from 'df_pre_pca' that correspond to the indices of the highly correlated variables.
# df_pre_pca <- df_pre_pca |> dplyr::select(-highly_correlated_names[[1]])
# Create a data frame from highly_correlated_names and threshold
highly_correlated_df <- data.frame(
  Predictor = highly_correlated_names
 # Threshold = threshold
)

# Create a gt table
highly_correlated_df|>
  gt()|>
  tab_header(
    title = "Highly Correlated Predictors",
    subtitle = paste("Predictors with correlation above", threshold)
  )|>
  cols_label(
    Predictor = "Predictor Name"
   # Threshold = "Correlation Threshold"
  )

```

# Exploratory data analysis (EDA)

Visualize the data and examine any patterns, distributions, or outliers. In Principal Component Analysis (PCA), you want to reduce the dimensionality of your dataset to uncover patterns and make visualization easier. However, if some variables (columns) have constant or near-constant values across the observations, they can't contribute to explaining the variability in your data. Such columns are advised to be removed before performing PCA.

```{r summary of the predictors}
#| warning: false

# Pivot the 'scaled_df_complete_temp' dataframe to long format
# Exclude certain columns from being pivoted and specify the new column names for 'variable' and 'value'
df_long <- scaled_df_complete_temp |> 
  dplyr::select(1:9) |> bind_cols(df_pre_pca) |> 
  tidyr::pivot_longer(
    cols = -c(idkec_dum, sumber, kdprov, nmprov, nmkab, nmkec, periode, kdkab, kdkec),
    names_to = "variable",
    values_to = "value"
  )

# Select only the 'variable' and 'value' columns from the long-form data
# Remove unwanted columns and group by 'variable' to prepare for summarization
gt_tab <- df_long |>
  dplyr::select(-c(idkec_dum, sumber, kdprov, nmprov, nmkab, nmkec, periode, kdkab, kdkec)) |>
  group_by(variable) 

# Calculate summary statistics for each group (each 'variable')
# Also, keep the original 'value' data in a list column called 'value_data'
# Use '.groups = "drop"' to return a regular dataframe rather than a grouped one
gt_stat <- gt_tab |> 
  summarise(
    min = min(value, na.rm = TRUE),
    max = max(value, na.rm = TRUE),
    median = median(value, na.rm = TRUE),
    #mean = mean(value, na.rm = TRUE),
    #sd = sd(value, na.rm = TRUE),
    value_data = list(value),
    .groups = "drop"
  )

# Create a GT table with a density plot column
# The density plot is generated from the 'value_data' list column
# Customize the appearance of the density plot and format the number columns
gt_stat |>
  gt::gt() |> 
  gtExtras::gt_plt_dist(
    value_data,
    type = "density",
    line_color = "blue",
    fill_color = "red"
  ) |> gt::fmt_number(columns = min:median, decimals = 1) |> 
  cols_label(
    variable = "Predictors",
    min = "Minimum",
    max = "Maximum",
    median = "Median",
    value_data = "Density"
  ) 

```

```{r}
## Boxplot
# Histograms
# boxplot(df_pre_pca)

```

## Density plots

```{r}
#| warning: false
#| include: false

# Start the PNG device
png("output/density_plots.png", width = 2000, height = 2800)

# Set up the plot layout
par(mfrow = c(7, 7))

# Define the font size
font_size <- 4

# Loop through the columns of the data frame
for (i in 1:ncol(df_pre_pca)) {
  # Get the current variable
  variable <- df_pre_pca[, i]
  
  # Create a density plot for the variable with larger font size
  plot(density(variable[[1]]), main = "", xlab = "", ylab = "", cex.axis = font_size, cex.lab = font_size)
  
  # Add the title using the column name with larger font size
  title(main = colnames(df_pre_pca)[i], cex.main = font_size)
}

# Close the PNG device
dev.off()
```

# PCA Analysis

```{r perform pca}
# Perform PCA
pca_result <- prcomp(df_pre_pca)
```

```{r pca summary}
# Assuming pca_result is your prcomp object
pca_summary <- summary(pca_result)$importance |> round(digits = 2)

# Convert to tibble and remove row names
pca_summary_tibble <- tibble::rownames_to_column(as.data.frame(pca_summary), var = "Components")

# Create gt table
pca_summary_tibble|>  
  gt()|>
  tab_header(
    title = "Principal Component Analysis Summary",
    subtitle = "Importance of components") |> 
    opt_align_table_header(align = "left")
```

<!-- ### The Biplot -->

<!-- Biplots graphically represent the relationship between observations and variables, providing insight into the PCs. -->

<!-- ```{r} -->

<!-- biplot(pca_result) -->

<!-- ``` -->

## The Scree Plot

A scree plot visualizes the proportion of variance explained by each PC. The first few PCs are the main contributors, while the rest have minimal influence.

```{r Create a scree plot}
# Visualize the PCA result using a scree plot to see the variance explained by each principal component
plot(pca_result, type = "l", main = "Scree Plot")

```

## A Look at Loadings

Loadings in PCA reveal how original variables influence each Principal Component. High absolute values indicate strong influence, while the sign indicates the direction. Understanding these can uncover underlying themes, such as climate factors.

#### The importance of the factors for each principal component

```{r visualise loadings}
# Extract the loadings for the desired number of principal components
num_pc <- 5
loadings <- pca_result$rotation[, 1:num_pc]

# Function to plot ordered loadings
plot_ordered_loadings <- function(loadings, pc_num) {
  ordered_indices <- order(-abs(loadings[, pc_num]), decreasing = TRUE)
  
  # Determine the colours based on the sign of the values
  bar_colours <- ifelse(loadings[ordered_indices, pc_num] < 0, "red", "blue")
  
  barplot(abs(loadings[ordered_indices, pc_num]), horiz = TRUE,
          main = paste("Loadings for PC", pc_num),
          names.arg = rownames(loadings)[ordered_indices],
          las = 1, cex.names = 0.7, xlim = c(0, 0.5), col = bar_colours)
}

# Set up the plotting area with adjusted margins
par(mar = c(5, 25, 4, 2))

# Loop over each principal component and plot
for (i in 1:num_pc) {
  plot_ordered_loadings(loadings, i)
}


```

To identify the factors that are consistently least influential across the first three principal components, we can look at the absolute values of the loadings. Factors with small absolute loadings are less influential. Knowledge of the specific field aids in interpreting PCs. Principal Components can be complex and may resist straightforward interpretation.

# Classifying Data with K-Means Clustering

### Step 1: Selecting the Principal Components

Start by using the top five Principal Components from PCA, which capture the core variances and correlations in your data.

```{r select the first 5 PCs}
# Extract the first five principal components
selected_components <- pca_result$x[, 1:5]
```

### Step 2: Determine the Number of Clusters

Select the optimal number of clusters (k) using methods like the Elbow Method or Silhouette Analysis.

#### Elbow Method

The Elbow Method involves running k-means clustering for a range of $k$ values and plotting the total within-cluster sum of squares. The "elbow" of the plot represents an optimal value for $k$ (a balance between precision and computational cost).

```{r Elbow plot}
# Compute total within-cluster sum of squares for different k values
set.seed(15)
wss <- sapply(1:10, function(k) {
  kmeans(selected_components, centers = k)$tot.withinss
})

# Plot the total within-cluster sum of squares
plot(1:10, wss, type = "b", xlab = "Number of Clusters", ylab = "Total Within-Cluster Sum of Squares",
     main = "Elbow Method")
```

based on the numbers, we might consider the point where the decrease starts to slow down, which could be around $k$= 4 or $k$=5.

#### Silhouette Analysis

Silhouette Analysis measures how similar an object is to its own cluster compared to other clusters. The silhouette score ranges from -1 to 1, where a high value indicates that the object is well matched to its own cluster and poorly matched to neighboring clusters.

```{r Shilouette scores}
library(cluster)

# Compute silhouette scores for different k values
set.seed(15)
silhouette_scores <- sapply(2:10, function(k) {
  cluster_result <- kmeans(selected_components, centers = k)
  silhouette_avg <- mean(silhouette(cluster_result$cluster, dist(selected_components))[, "sil_width"])
  silhouette_avg
})

# Plot the silhouette scores
plot(2:10, silhouette_scores, type = "b", xlab = "Number of Clusters", ylab = "Average Silhouette Width",
     main = "Silhouette Analysis")

```

The maximum silhouette score corresponds to 5 clusters (since the first value represents $k$=2)

### Step 3: Applying K-Means Algorithm

Utilize the k-means algorithm to divide the data into k clusters, focusing on the first three PCs. In R, this can be done with:

```{r Applying K-Means Algorithm}
#| eval: true
# Choose the number of clusters
k <- 5

# Perform k-means clustering
set.seed(15)
kmeans_result <- kmeans(selected_components, centers = k)
```

### Step 4: Interpret the Clusters

Investigate each cluster to understand the common traits within them. Interpretation requires a blend of data analysis and domain-specific knowledge.

```{r  Plot the first two principal components and color by cluster}
library(ggplot2)

# Create a data frame for plotting
plot_data <- data.frame(selected_components, cluster = as.factor(kmeans_result$cluster))

# Plot the first two principal components and color by cluster
ggplot(plot_data, aes(x = PC1, y = PC2, color = cluster)) +
  geom_point() +
  labs(title = "K-means Clustering on First Two Principal Components") +
  theme_minimal()

# Plot the first two principal components and color by cluster
ggplot(plot_data, aes(x = PC1, y = PC3, color = cluster)) +
  geom_point() +
  labs(title = "K-means Clustering on First and Third Principal Components") +
  theme_minimal()


```

An interactive 3D scatter plot below shows the first three principal components, colored by cluster. We can rotate the plot to view it from different angles, and you can hover over the points to see additional information.

```{r 3D scatter plot of the first-three PCs }
#| warning: false
#| messages: false

# Load the plotly package
library(plotly)
names_kab_kec<- scaled_df_complete_temp |> 
  select(c(nmkab, nmkec))

# Create a data frame for plotting
plot_data <- data.frame(selected_components, cluster = as.factor(kmeans_result$cluster)) |> bind_cols(names_kab_kec)

# Create the 3D scatter plot
plot_3d <- plot_ly(
  data = plot_data,
  x = ~ PC1,
  y = ~ PC2,
  z = ~ PC3,
  color = ~ cluster,
  type = "scatter3d",
  text = ~ paste("Kab./Kota:", nmkab, "<br>Kecamatan:", nmkec),
  mode = "markers"
) 
# Show the plot
plot_3d


```

### Step 5: Visualise the clusters into a map

<!-- ## Grids of box plots for each parameters -->

<!-- ```{r Box plots by typologies} -->

<!-- pca_eda <- tibble(df_pre_pca, cluster = as.factor(kmeans_result$cluster)) -->

<!-- library(ggplot2) -->

<!-- library(gridExtra) -->

<!-- # Convert the data frame from a wide to a long format   -->

<!-- pca_eda_long <- pca_eda|>  -->

<!--   tidyr::gather(key = "variable", value = "value", -cluster) -->

<!-- #Create a list of ggplot objects for each variable -->

<!-- plots <- lapply(unique(pca_eda_long$variable), function(var) { -->

<!--   ggplot(pca_eda_long[pca_eda_long$variable == var,], aes(x = cluster, y = value)) + -->

<!--     geom_boxplot() + -->

<!--     labs(title = var, x = "Cluster", y = "Value") + -->

<!--     theme_minimal() -->

<!-- }) -->

<!-- grid_plot <- do.call(gridExtra::grid.arrange, c(plots, ncol = 5)) -->

<!-- ggsave("output/boxplots.png", grid_plot, width = 20, height = 15) -->

<!-- grid_plot -->

<!-- ``` -->

```{r Interactive map}
#| warning: false
#| message: false
# Read the shapefile
desa <-
  st_read("data/INDO_DESA_2019/INDO_DESA_2019.shp", quiet = TRUE)

# Filter based on the 'kdprov' attribute
desa_sulsel <- desa |> filter(kdprov %in% 73)
desa_sulsel <- desa_sulsel |> dplyr::select(-c("kddesa", "iddesa"))
desa_sulsel_id_kec <-
  desa_sulsel |> select(nmkab, nmkec, kdprov, kdkab, kdkec) |>
  mutate(idkec_dum = paste0(kdprov, kdkab, kdkec, "a"))
rm(desa)

# add the cluster attribute to the desa_sulsel object
cluster_data <-
  scaled_df_complete_temp |># select(-c(nmkab, nmkec , nmprov,  sumber, kdprov, kdkab, kdkec, periode )) |>
  dplyr::select(idkec_dum ) |> bind_cols(tibble (cluster = kmeans_result$cluster))

clusters_sulsel <-
  desa_sulsel_id_kec |> left_join(cluster_data, by = "idkec_dum")

# Write the sf object to a shapefile
st_write(
  clusters_sulsel,
  "output/tipologi_5_kelas_sulsel.shp",
  append = TRUE,
  quiet = TRUE
)


# # Plot the SpatVector object, using the 'cluster' attribute for the fill color
# plot(desa_sulsel, "cluster", col=c("#E69F00", "#CC79A7", "#009E73", "#F0E442", "#0072B2"), lwd=0.1) # Assuming we have 5 clusters

# Create a color palette for the 'cluster' variable
pal <-
  colorFactor(palette = "Set1", domain = clusters_sulsel$cluster)

# Constructing the label string first
clusters_sulsel$label_content <- with(
  clusters_sulsel,
  paste0(
    "<strong>Kabupaten:</strong> ",
    nmkab,
    "<br>",
    "<strong>Kecamatan:</strong> ",
    nmkec,
    "<br>",
    "<strong>Cluster:</strong> ",
    cluster
  )
) |> lapply(htmltools::HTML)


# Create the leaflet map with HTML-rendered labels
leaflet(clusters_sulsel) |>
  addProviderTiles(providers$OpenStreetMap) |>
  addPolygons(
    fillColor = ~ pal(cluster),
    weight = 0.5,
    opacity = 1,
    color = "white",
    dashArray = "3",
    fillOpacity = 0.7,
    highlight = highlightOptions(
      weight = 5,
      color = "#666",
      dashArray = "",
      fillOpacity = 0.7,
      bringToFront = TRUE
    ),
    label = ~ label_content,
    labelOptions = labelOptions(noHide = FALSE,
                                direction = 'auto')
  ) |>
  addLegend(pal = pal,
            values = ~ cluster,
            title = "Cluster")
```

# Interpreting the typologies

## Assign a name for each typology

```{r Define a nickname for each cluster}
#| warning: false
#| message: false
cluster_lookup<- readr::read_csv("data/cluster_names.csv")
find_cluster_name <- function(lookup_table = cluster_lookup, cluster_value) {
  result <- lookup_table %>%
    filter(cluster == cluster_value) %>%
    pull(name)
  
  return(result)
}
cluster_lookup |> kable()


```

## Create a table of descriptive stats for each typology

Tabel dibawah menyajikan karakteristik lingkungan dan sosio-ekonomi dari berbagai tipologi wilayah di Sulawesi Selatan. Setiap kolom merepresentasikan satu kelas tipologi wilayah, mulai dari `r find_cluster_name(cluster_value = 1)` hingga `r find_cluster_name(cluster_value = 3)`. Nilai yang disajikan adalah nilai rata-rata dari seluruh kecamatan di setiap kelas tipologi. Nilai dalam kurung adalah standar deviasi, yang menunjukkan sejauh mana variasi data di setiap kelas tipologi.

::: callout-tip
### Apa itu rata-rata dan standar deviasi?

**Rata-Rata**

Rata-rata adalah angka yang sering kita gunakan untuk mengetahui gambaran umum dari sekelompok data. Misalnya, jika rata-rata jarak ke jalan terdekat di daerah urban cuma 0,24 km, ini menunjukkan bahwa umumnya daerah tersebut dekat dengan jalan raya.

**Standar Deviasi**

Standar deviasi (SD) memberitahu kita seberapa besar variasi atau perbedaan antar angka dalam sekelompok data. Semakin tinggi SD, makin besar juga variasinya. Misalnya, rata-rata jarak ke jalan terdekat di daerah urban adalah 0,24 km dengan SD 0,45 km. Ini artinya yang sangat dekat dengan jalan, tetapi juga ada yang jauh---bahkan lebih dari dua kali lipat dari rata-rata.

Nilai standar deviasi (SD) yang besar, seperti contoh diatas, menjadi indikasi bahwa, rata-rata mungkin tidak memberikan gambaran yang mewakili suatu tipologi. Dalam hal ini, standar deviasi memberikan konteks tambahan yang penting untuk memahami sejauh mana data bervariasi.
:::

```{r data wrangling}
#| warning: false
#| message: false
df_interpretation <-
  df_raw |>
  dplyr::select(
    idkec_dum,
    distance_to_commodity_processing_factory,
    distance_to_deforestation,
    rasio_pt,
    indeks_bahaya_longsor,
    percentage_of_plantation_area_per_sub_district,
    indeks_bahaya_banjir,
    total_kk_berdasarkan_pengguna_dan_non_pengguna_listrik,
    distance_to_road,
    percentage_deforestation_area_size,
    #buffer_to_500m_irigated_land,
    percentage_of_agricultural_area_small_holder_in_the_village,
    erosion_risk_t_ha_1_yr_1,
    distance_to_plantation,
    distance_to_burned_area,
    aridity_index,
    distance_to_forest,
    rasio_minimarket_swalayan,
    rasio_rs,
    arable_land_percent,
    distance_to_plantation_concession,
    distance_to_river,
    rasio_faskes_1,
    annual_mean_temp,
    temp_change,
    annual_mean_prec,
    prec_change,
    rasio_40pers_ekon_rendah_rt,
    irrigated_land,
    wet_months) |> 
  mutate_at(vars(contains("percent")), ~ . * 100) |> 
  mutate_at(vars(contains("distance")), ~ . / 1000)# |> 
#  mutate(buffer_to_500m_irigated_land = buffer_to_500m_irigated_land*100)



polygon_sulsel_df <- clusters_sulsel  |> dplyr::select(-label_content) |> 
  left_join(df_interpretation, by = "idkec_dum") |> 
  tidyr::drop_na(cluster)


sulsel_df_long <- polygon_sulsel_df |> 
  sf::st_drop_geometry() |> 
  as_tibble() |>
  select(-(1:6)) |>
  pivot_longer(cols = -cluster,
               # Exclude the 'cluster' column
               names_to = "variable",
               # Name of the new column for variable names
               values_to = "value"    # Name of the new column for values
               ) |>  
  left_join(cluster_lookup, by = "cluster") |> 
  relocate(name, .after = cluster ) |> 
  dplyr::select(-cluster)

sulsel_df_long_summarised <- sulsel_df_long |>
  group_by(name, variable) |>
  summarise(mean = mean(value, na.rm = TRUE),
            std_dev = sd(value, na.rm = TRUE)) |> ungroup()


sulsel_df_wide <- sulsel_df_long_summarised |> 
   mutate(across(where(is.numeric), ~ round(., digits = 2))) |> 
  mutate(value_combined = paste0(mean, " (", std_dev, ")")) |> 
  select(-mean, -std_dev)  |> 
  pivot_wider(
    names_from = name, 
    values_from = value_combined,
    id_cols = variable
  ) 

lookup_units<- tibble::tribble(~variable, ~units,
                "annual_mean_prec", "mm/year",
                "annual_mean_temp", "deg C/year",
                "distance_to_commodity_processing_factory", "Km",
                "distance_to_deforestation", "Km",
                "rasio_pt", "kk/unit",
                "indeks_bahaya_longsor", "nilai indeks",
                "percentage_of_plantation_area_per_sub_district", "percent",
                "indeks_bahaya_banjir", "nilai indeks",
                "total_kk_berdasarkan_pengguna_dan_non_pengguna_listrik", "jumlah kk",
                "distance_to_road", "Km",
                "percentage_deforestation_area_size",  "percent",
              #  "buffer_to_500m_irigated_land", "% to kecamatan",
                "percentage_of_agricultural_area_small_holder_in_the_village", "percent",
                "erosion_risk_t_ha_1_yr_1", "(t/ha/yr)",
                "distance_to_plantation", "Km",
                "distance_to_burned_area", "Km",
                "aridity_index", "nilai indeks",
                "distance_to_forest", "Km",
                "rasio_minimarket_swalayan", "kk/unit",
                "rasio_rs", "kk/unit",
                "arable_land_percent",  "percent",
                "distance_to_plantation_concession", "Km",
                "distance_to_river", "Km",
                "rasio_faskes_1", "kk/unit",
                "prec_change", "mm/year",
                "temp_change", "deg C/year",
                "rasio_40pers_ekon_rendah_rt", "percent",
                "irrigated_land", "percent",
                "wet_months", "months (average)")

summary_table_sulsel <- sulsel_df_wide |> left_join(lookup_units, by = "variable")

summary_table_sulsel |> 
  readr::write_csv("output/intisari_tipologi_sulsel.csv")

summary_table_sulsel |> 
  gt()|>
  tab_header(
    title = "Karakteristik Sosio-ekonomi dan Lingkungan di Berbagai Kelas Tipologi: Analisis Rata-rata dan Standar Deviasi") |> 
    opt_align_table_header(align = "left")

```

Kode warna pada tabel dibawah menunjukkan rentang nilai dari variabel yang diberikan untuk masing-masing tipe wilayah. Warna biru gelap menunjukkan nilai yang lebih tinggi, sementara warna yang lebih merah terang menunjukkan nilai yang lebih rendah.

```{r color coded table}
#| warning: false
#| message: false
# Function to extract numeric values
extract_numeric <- function(cell_value) {
  as.numeric(unlist(strsplit(cell_value, " "))[1])
}

# Function to get color for each value based on its rank in the row
get_row_colors <- function(row_values) {

  rank_values <- rank(row_values)
  colorRampPalette(c("darkblue","lightyellow", "salmon"))(length(row_values))[rank_values]
}

# Compute colors for the entire table
all_values <- apply(summary_table_sulsel[2:6], 2, function(row) {
  sapply(row, extract_numeric)
})

all_colors <- apply(all_values, 2, get_row_colors)


# Apply the colors to the gt table
gt_table <- all_values |> as_tibble() |>
  {\(x) bind_cols(summary_table_sulsel[1], x, summary_table_sulsel[7])}() |> 
  gt() |>
  data_color(
    method = "factor",
    direction = "row",
    columns = 2:6,
    colors = c("salmon","lightyellow", "darkblue")
   # reverse = TRUE
  ) |>
  tab_options(
    container.overflow.x = TRUE,
    container.overflow.y = TRUE
  )
gt_table

```

# Narasi Interpretasi Tipologi

## Peta Tipologi Kerentanan Terhadap Perubahan Iklim pada Penghidupan Berbasis Pertanian di Sulawesi Selatan

::: panel-tabset

### Peta Tipologi

```{r Visualise the map}
#| warning: false
#| message: false
clusters_sulsel_with_name <- clusters_sulsel |> right_join(cluster_lookup, by = "cluster")

pal <-
  colorFactor(palette = "Set1", domain = clusters_sulsel_with_name$name)
# Create the leaflet map with HTML-rendered labels
leaflet(clusters_sulsel_with_name) |>
  addProviderTiles(providers$OpenStreetMap) |>
  addPolygons(
    fillColor = ~ pal(name),
    weight = 0.5,
    opacity = 1,
    color = "white",
    dashArray = "3",
    fillOpacity = 0.7,
    highlight = highlightOptions(
      weight = 5,
      color = "#666",
      dashArray = "",
      fillOpacity = 0.7,
      bringToFront = TRUE
    ),
    label = ~ label_content,
    labelOptions = labelOptions(noHide = FALSE,
                                direction = 'auto')
  ) |>
  addLegend(pal = pal,
            values = ~ name,
            title = "Cluster")


```


### Jumlah Kecamatan
```{r Descriptive Statistics for demography and area}
#| warning: false
#| message: false
intisari_desk_kec <- readr::read_csv("data/interpretasi_tipologi_sulsel.csv") |> 
  dplyr::mutate(`Kepadatan RT` = `Luas (Ha)`/`Rumah Tangga`)

create_cluster_summary_tibble <- function(data, cluster_number) {
  # Filter the row based on the cluster number
  row <- dplyr::filter(data, Cluster == as.character(cluster_number))
  
  # Extract the values
  jumlah_kecamatan <- row$`Jumlah kecamatan`
  luas_ha <- row$`Luas (Ha)`
  rumah_tangga <- row$`Rumah Tangga`
  kepadatan_rt <- row$`Kepadatan Rumah Tangga (RT/Ha)`
  
  # Extract the percentages
  percent_luas <- row$`% Luas`
  percent_rumah_tangga <- row$`% Rumah Tangga`
  
  # Create the tibble
  summary_tibble <- tibble::tribble(
    ~"", ~Nilai, ~Persentase,
    "Jumlah kecamatan", jumlah_kecamatan, percent_luas,
    "Luas (Ha)", luas_ha, percent_luas,
    "Rumah Tangga", rumah_tangga, percent_rumah_tangga,
    "Kepadatan Rumah Tangga (RT/Ha)", kepadatan_rt, NA_character_
  )
  
  return(summary_tibble)
}


# Create the plot for Jumlah Kecamatan
fig_jumlah_kecamatan <- intisari_desk_kec |> 
  filter(Nama != "Total") |> 
  plot_ly(labels = ~Nama, values = ~`Jumlah kecamatan`) |> 
  add_pie(hole = 0.6) |> 
  layout(title = "Jumlah Kecamatan",
         xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
         yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))  

# Show the plot
fig_jumlah_kecamatan

```

### Proporsi Luas
```{r donat luas}
# Create the plot for Jumlah Kecamatan
fig_luas <- intisari_desk_kec |> 
  filter(Nama != "Total") |> 
  plot_ly(labels = ~Nama, values = ~`Luas (Ha)`) |> 
  add_pie(hole = 0.6) |> 
  layout(title = "Proporsi Luas (Ha)",
         xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
         yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))  

# Show the plot
fig_luas
```


### Jumlah Rumah Tangga

```{r donat RT}
# Create the plot for Jumlah RT
fig_RT <- intisari_desk_kec |> 
  filter(Nama != "Total") |> 
  plot_ly(labels = ~Nama, values = ~`Rumah Tangga`) |> 
  add_pie(hole = 0.6) |> 
  layout(title = "Jumlah Rumah Tangga",
         xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
         yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))  

# Show the plot
fig_RT
```

:::



## Kecamatan-Kecamatan `r find_cluster_name(cluster_value = 1)`

::: panel-tabset
### Deskripsi umum

-   Kepadatan KK per kecamatan terendah kedua setelah daerah perdesaan,
-   Aksesibilitas terhadap penghidupan berbasis lahan paling rendah.
-   Dalam konteks kepulauan, kegiatan ekonomi cenderung bergantung pada sumber daya laut dan serta infrastruktur transportasi laut.
-   Minim fasilitas kesehatan, pendidikan, dan akses ke pasar.
-   Daerah yang paling kering di Sulawesi Selatan.

### Luas dan Demografi

```{r tabel luas dan demografi kepulauan}
create_cluster_summary_tibble(intisari_desk_kec, 1) |> kable()
```

### Tantangan utama

-   Aksesibilitas dan infrastruktur terbatas
-   Potensi kelangkaan air tawar, indeks kekeringan yang relatif tinggi, diperparah potensi penurunan curah hujan yang tertinggi kedua di masa depan
-   Lebih dari 40% penduduknya tergolong pra-sejahtera
-   Sebagian besar berada di dataran rendah yang hangat, kenaikan suhu sekitar 1 °C akan berdampak signifikan.

### Deskripsi detil

-   Daerah kepulauan memiliki rata-rata 54,41% lahan yang bisa ditanami, dengan deviasi standar 36,65% yang mengindikasikan variasi yang signifikan antar kecamatan. Data menunjukkan tidak ada lahan pertanian dengan irigasi di daerah ini.
-   Curah hujan tahunan di daerah kepulauan rata-rata adalah 1.327,3 mm dengan SD 718,42 mm, dan periode basah sekitar 2,61 bulan. Suhu rata-rata tahunan adalah 20,87°C dengan SD 11,07°C, mencerminkan variabilitas iklim yang cukup tinggi antar-kecamatan. Proyeksi untuk tahun 2050 menunjukkan peningkatan suhu rata-rata sebesar 0,99°C (SD 0,53°C), sedangkan curah hujan diperkirakan akan menurun sekitar 57,15 mm (SD 38,64 mm).
-   Indeks kekeringan sebesar 0,07 (SD=0,06) menandakan potensi kelangkaan air tawar.
-   Aksesibilitas di daerah kepulauan tergolong terbatas. Jarak rata-rata ke jalan terdekat adalah 1,65 km (SD=1,56 km), angka yang tergolong tinggi dibanding topologi lainnya. Jarak ke pabrik pengolahan komoditas juga tergolong jauh, yaitu 172,37 km (SD=91,41 km).
-   Konversi lahan seperti deforestasi masih terjadi dalam periode 2015-2020. Jarak rata-rata ke area hutan yang dikonversi sekitar 11,27 km (SD=10,2 km). Deforestasi mencapai rata-rata 1,59% (SD=2,45%) dari total luas kecamatan.
-   Daerah kepulauan terletak jauh dari area yang terbakar, dengan jarak rata-rata 128,84 km (SD=80,54 km). Mereka juga berjarak cukup jauh dari perkebunan, rata-rata 119,07 km (SD=70,31 km), tetapi cukup dekat dengan ijin konsesi perkebunan, yaitu 11,27 km (SD=20,06 km).
-   Dari segi bahaya alam, pulau-pulau ini menunjukkan risiko longsor dan erosi yang moderat, dengan rata-rata indeks resiko longsor 0.13. Indeks risiko banjir rendah, dengan rata-rata sekitar 0,05 (SD=0,06).
-   Dari segi demografi, rata-rata terdapat 4.131 keluarga (SD=1.658) di daerah kepulauan. Sebanyak 42,23% (SD=9,32%) dari rumah tangga tergolong dalam 40% ekonomi terendah menurut data TNP2K. Rasio layanan kesehatan menunjukkan bahwa satu fasilitas kesehatan melayani rata-rata 562 keluarga (SD=865,56).
:::

## Kecamatan-Kecamatan `r find_cluster_name(cluster_value = 5)`

::: panel-tabset
### Deskripsi umum

-   Kepadatan KK (rumah tangga) per kecamatan terendah di Sulawesi Selatan
-   Daerah pegunungan, banyak beririsan dengan kawasan lindung, benteng terakhir keanekaragaman hayati unik khas Wallacea
-   Curah hujan tergolong tinggi, tidak rentan kekeringan (AI = 0.3).
-   Dekat dengan hutan dan tempat terjadinya deforestasi dan paling dekat dengan area bekas terbakar.
-   Paling jauh dari konsesi perkebunan serta akses jalan dan sungai.
-   Paling sedikit mengalami perubahan curah hujan, namun laju peningkatan temperatur paling tinggi.
-   Bahaya banjir tegolong paling rendah

### Luas dan Demografi

```{r tabel luas dan demografi desa}
create_cluster_summary_tibble(intisari_desk_kec, 5) |> kable()
```

### Tantangan utama

-   Karena kondisi topografi dan curah hujan tinggi, Rentan terhadap risiko erosi dan longsor paling tinggi.
-   Deforestasi kedua tertinggi di Pulau Sulawesi
-   Karena kondisi topografi, terpapar peningkatan suhu rata-rata paling tinggi.
-   Hampir dari separuh rumah tangga yang tinggal di tipologi ini masuk dalam kelompok 40% ekonomi terbawah menurut data TNP2K.
-   Aksesibilitas terhadap penghidupan berbasis lahan paling terbatas dibandingkan tipologi lainnya di Pulau Sulawesi.

### Deskripsi detil

-   Daerah pedalaman mempunyai rata-rata 51.8% lahan yang bisa ditanami, sedikit lebih rendah dibandingkan daerah sub-pedalaman. Deviasi standar sebesar 28.03% menunjukkan distribusi lahan yang cukup konsisten antar kecamatan dalam kelompok yang sama. Namun, hanya ada sedikit lahan dengan akses irigasi, rata-rata 0.14% (SD=0.72%). Indeks kekeringan di daerah ini adalah 0,31 (SD=0,06), menunjukkkan potensi kekeringan yang paling rendah dibanding daerah lainnya.
-   Aksesibilitas di daerah ini tergolong sulit dibandingkan kelompok tipologi lainnya, dengan jarak rata-rata ke jalan terdekat adalah 1.49 km (SD=1.65 km). Hanya ada sedikit lahan dengan akses irigasi, rata-rata 0.14% (SD=0.72%).
-   Daerah ini terletak dekat dengan lahan berhutan, dengan jarak rata-rata 2.88 km (SD=2.6 km). Deforestasi terjadi pada jarak rata-rata 4.22 km (SD=2.87 km). Jarak rata-rata ke perkebunan adalah 23.82 km (SD=12.16 km), dan ke konsesi perkebunan adalah 56.23 km (SD=26.57 km).
-   Selama periode 2015-2020, deforestasi di daerah pedalaman mencapai rata-rata 1.08% (SD=1.49%) dari total luas kecamatan. Lahan pertanian yang dikelola oleh petani kecil mencakup rata-rata 26.26% (SD=25.39%). Area perkebunan di daerah ini hanya menempati rata-rata 1.24% (SD=1.98%) dari total luas kecamatan.
-   Daerah ini mempunyai risiko erosi dan longsor yang paling tinggi, dengan rata-rata 0,67 (SD=0,22). Namun indeks risiko banjir tergolong paling rendah (0,02; SD=0,05).
-   Ada rata-rata sekitar 3,771 keluarga/ rumah tangga (SD=1,993.32) di tiap kecamatan. Sebanyak 48.63% (SD=14.7%) dari rumah tangga tergolong dalam 40% ekonomi terendah menurut data TNP2K, tertinggi dibandingkan kelas tipologi lainnya. Satu fasilitas kesehatan melayani rata-rata 898.69 keluarga (SD=560.26), yang lebih rendah dibandingkan daerah sub-pedalaman, meskipun begitu jumlahnya sedikit untuk luasan area yang dilayani.
-   Daerah pedesaan memiliki rata-rata curah hujan tahunan sebesar 2,780.4 mm (SD=250.8 mm), paling tinggi dibandingkan dengan tipologi lainnya. Dalam hal suhu, daerah pedesaan memiliki rata-rata tahunan sebesar 21.7°C, mencerminkan lokasi kecamatan-kecamatan dalam tipologi ini tersebar di kawasan pegunungan. Namun, daerah pedesaan menunjukkan variabilitas suhu yang jauh lebih sedikit, dengan SD hanya sebesar 2.38°C, berbeda dengan SD yang lebih lebar di daerah kepulauan sebesar 10.33°C.
-   Pada tahun 2050, suhu di daerah pedesaan (Kecamatan-Kecamatan Pedalaman) diperkirakan akan meningkat rata-rata sebesar 1.45°C, paling tinggi dibandingkan dengan tipologi lainnya. Namun dari sisi curah hujan, daerah pedesaan diperkirakan akan mengalami penurunan sebesar -25 mm setiap tahunnya pada tahun 2050. Penurunan ini kurang tajam dibandingkan dengan penurunan yang diperkirakan di daerah kepulauan sebesar -57.15 mm, meskipun variabilitas dalam proyeksi untuk daerah pedesaan lebih tinggi dengan SD sebesar 53.02 mm.
:::

## Kecamatan-Kecamatan `r find_cluster_name(cluster_value = 2)`

::: panel-tabset
### Deskripsi umum

-   Paling dekat dengan perkebunan, hutan, dan area terjadinya deforestasi.
-   Paling jauh dari area bekas terbakar di pulau sulawesi.
-   Banyak tergolong dalam kelas menengah, seperti:
    -   Kepadatan KK per kecamatan menengah, begitu juga fasilitas kesehatan dan pendidikan
    -   Bahaya banjir menengah.
    -   Lahan yang bisa ditanami tergolong menengah, mirip dengan daerah pedesaan dan kepulauan
    -   Luasan irigasi tergolong menengah

### Luas dan Demografi

```{r tabel luas dan demografi semi desa}
create_cluster_summary_tibble(intisari_desk_kec, 2) |> kable()
```

### Tantangan utama

-   Rentan terhadap risiko erosi dan longsor tertinggi kedua setelah daerah pedalaman.
-   Deforestasi paling tinggi
-   Beresiko mengalami penurunan curah hujan yang tinggi, meskipun tidak tergolong daerah kering.
-   Sekitar 1/3 penduduk di tipologi ini masuk dalam kelompok 40% ekonomi terbawah menurut data TNP2K.

### Deskripsi detil

-   Daerah semi-pedalaman mempunyai rata-rata 53.62% lahan yang bisa ditanami, dengan deviasi standar sebesar 19.93%. Indeks kekeringan di daerah ini adalah 0,24 (SD=0,05), lebih basah dibanding tipologi lainnya kecuali daerah pedalaman.
-   Dari segi aksesibilitas, daerah semi-pedalaman mirip dengan daerah pedalaman dengan jarak rata-rata ke jalan terdekat sekitar 1,3 km (SD=1,49 km). Selain itu, sekitar 4.06% (SD=7.7%) lahan mendapat irigasi. Jarak ke area yang terbakar dan pabrik pengolahan komoditas juga lebih dekat, rata-rata 18.14 km (SD=11.74 km) dan 51.48 km (SD=28.35 km), secara berurutan.
-   Daerah ini berada pada jarak yang paling dekat dari area deforestasi dan hutan dibanding daerah lainnya, dengan rata-rata 3.05 km (SD=1.5 km) dan 2.38 km (SD=1.47 km). Jarak ke perkebunan juga paling dekat, rata-rata 21.5 km (SD=15.51 km), sementara jarak ke konsesi perkebunan adalah sekitar 33.72 km (SD=27.49 km). Sungai memiliki jarak rata-rata 2.96 km (SD=2.23 km) (menengah).
-   Selama periode 2015-2020 , daerah semi-pedalaman mencatat laju deforestasi tertinggi dibanding tipologi lainnya, sekitar 2.66% (SD=3.1%) dari total luas kecamatan. Di daerah ini, lahan pertanian milik petani kecil mencapai rata-rata 26.64% (SD=14.02%) dari luas kecamatan. Sedangkan perkebunan menempati rata-rata 2.31% (SD=2.08%) dari luas total kecamatan, tergolong rendah dibanding kawasan lainnya, kecuali pedalaman.
-   Mengenai bahaya alam, daerah ini memiliki risiko erosi yang relatif tinggi. Indeks risiko banjir adalah 0.17 (SD=0.18), dan indeks risiko longsor moderat, rata-rata 0.35 (SD=0.22).
-   Terdapat sekitar rata-rata 7424.74 keluarga (SD=2381.68) di daerah ini. Sebanyak 33% (SD=10.07%) dari rumah tangga tergolong dalam 40% ekonomi terendah menurut data TNP2K, serupa dengan tipologi sub-perkotaan. Fasilitas kesehatan lebih banyak dibanding di pedalaman namun juga melayani lebih banyak rumah tangga, satu rumah sakit melayani rata-rata 1223.56 kk (SD=718.61).
-   Daerah semi-pedesaan memiliki rata-rata curah hujan tahunan sebesar 2628.24 mm (SD=276.12 mm), tergolong basah dibanding kawasan lainnya, kecuali pedalaman. Suhu rata-rata tahunan di daerah sub-pedesaan adalah 24.94°C (SD=1.78°C), lebih tinggi dibandingkan dengan daerah pedalaman dan kepulauan namun lebih rendah daripada daerah perkotaan.
-   Pada tahun 2050, suhu di daerah semi-pedalaman diperkirakan akan meningkat sekitar 1.4°C (SD=0,09°C), sedikit lebih cepat dibandingkan dengan kenaikan 1.42°C di daerah sub-perkotaan. Diperkirakan akan ada penurunan curah hujan sebesar -63.89 mm (SD=41.13 mm), yang lebih tajam daripada penurunan 25 mm (SD=53.02 mm) di daerah pedesaan, namun lebih sedikit dibandingkan dengan penurunan 81.56 mm (SD=48.1 mm) di daerah sub-perkotaan.
:::

## Kecamatan-Kecamatan `r find_cluster_name(cluster_value = 4)`

::: panel-tabset
### Deskripsi umum

-   Food basket: Lahan yang bisa ditanami tertinggi. Dengan cakupan lahan yang teririgasi tertinggi.
-   Kepemilikan lahan smallholder paling tinggi.
-   Paling dekat dengan area terbakar setelah daerah perkotaan.
-   Akses terhadap jalan dan sungai kedua tertinggi setelah perkotaan.
-   Kepadatan KK per kecamatan kedua tertinggi setelah perkotaan. Begitu juga banyaknya fasilitas kesehatan dan pendidikan, berada dibawah perkotaan.
-   Paling jauh dari hutan, karena tutupan hutan relatif sedikit.

### Luas dan Demografi

```{r tabel luas dan demografi semi kota}
create_cluster_summary_tibble(intisari_desk_kec, 4) |> kable()
```

### Tantangan utama

-   Lumbung pangan Sulawesi rentan terhadap perubahan iklim, karena:
    -   Sebagian besar berada di dataran rendah, maka dampak kenaikan suhu 1.41°C akan berdampak besar untuk daerah yang saat ini sudah hangat.
    -   Penurunan curah hujan paling tinggi (-84.31 mm) untuk kelas tipologi yang paling kering di dataran pulau Sulawesi (aridity index 0,14), tipologi paling rawan kekeringan di Pulau Sulawesi.
    -   Rentan terhadap risiko banjir di musim penghujan, tutupan hutan yang tersisa sedikit.
-   Jumlah rumah tangga tinggi, dengan lebih dari1/3 penduduk di tipologi ini masuk dalam kelompok 40% ekonomi terbawah menurut data TNP2K.

### Deskripsi detil

-   Daerah semi-perkotaan adalah lumbung pangan, dengan rata-rata 82.99% (SD=13.17%) lahan yang bisa ditanami. Meskipun begitu daerah ini tergolong paling kering di Pulau Sulawesi, indeks kekeringan di daerah ini adalah 0.15 (SD=0.06).
-   Aksesibilitas di daerah ini sangat baik, dengan jarak rata-rata ke jalan terdekat hanya 0.43 km (SD=0.25 km). Sebanyak 16.62% (SD=20.81%) lahan dalam radius 500m mendapatkan irigasi. Jarak ke area yang terbakar adalah 13.1 km (SD=10.8 km). Berada paling jauh dari lokasi pemrosesan komoditas: 78.66 km (SD=33.28 km).
-   Daerah ini relatif jauh dari area deforestasi dan tutupan hutan, dengan jarak rata-rata 10.99 km (SD=5.48 km) dan 9.56 km (SD=5.52 km), secara berurutan. Menandakan sedikitnya hutan di daerah ini. Jarak ke perkebunan dan konsesi perkebunan adalah 26.88 km (SD=16.64 km) dan 33.63 km (SD=24.23 km), masing-masing. Akses ke sungai juga cukup dekat, dengan jarak rata-rata 2.94 km (SD=2.04 km).
-   Selama periode 2015-2020, deforestasi di daerah sub-perkotaan sangat rendah, hanya sekitar 0.08% (SD=0.18%) dari luas kecamatan. Lahan pertanian milik petani kecil mencakup rata-rata 60.32% (SD=24.07%) dari luas kecamatan. Di daerah ini, perkebunan menempati rata-rata 5.65% (SD=7.69%) dari luas kecamatan.
-   Mengenai risiko bencana alam, daerah ini memiliki risiko erosi yang moderat, dengan rata-rata tahunan 412,817.92 ton per hektar (SD=391,663.9 t/ha/thn). Indeks risiko banjir relatif tinggi adalah 0.28 (SD=0.19), sementara indeks risiko longsor rendah, yaitu 0.07 (SD=0.1).
-   Jumlah keluarga di daerah Semi-Perkotaan kedua tertinggi setelah perkotaan, dengan rata-rata sekitar 9,839.06 keluarga (SD=4,815.56). Sebanyak 34.96% (SD=10.74) dari rumah tangga tergolong dalam 40% ekonomi terendah menurut data TNP2K, serupa dengan tipologi sub-perkotaan. Rasio layanan kesehatan menunjukkan bahwa satu fasilitas kesehatan melayani rata-rata 1,542.29 KK (SD=761.95).
-   Daerah sub-perkotaan menerima curah hujan tahunan sebesar 2,172.42 mm (SD=347.73 mm), lebih kering dibandingkan dengan daerah pedesaan. Dari sisi suhu, daerah sub-perkotaan memiliki rata-rata tahunan sebesar 26.67°C (SD=0.55°C) karena umumnya berlokasi di dataran rendah, lebih hangat dibandingkan dengan daerah pedesaan yang cenderung tersebar di lokasi pegunungan.
-   Pada tahun 2050, diperkirakan suhu di daerah sub-perkotaan akan meningkat sekitar 1.42°C (SD=0.06). Prediksi untuk tahun 2050 menunjukkan penurunan curah hujan tahunan di daerah sub-perkotaan sebesar 81.56 mm (SD=48.1), yang merupakan penurunan tertinggi dibanding tipologi lainnya.
:::

## Kecamatan-Kecamatan `r find_cluster_name(cluster_value = 3)`

::: panel-tabset
### Deskripsi umum

-   Lahan yang bisa ditanami paling sedikit
-   Namun lahan dengan irigasi paling tinggi
-   Kepemilikan lahan smallholder paling rendah setelah kepulauan
-   Paling dekat dengan area terbakar kedua setelah daerah semi perkotaan
-   Akses terhadap jalan dan sungai terbaik/tertinggi.
-   Kepadatan KK per kecamatan paling tinggi
-   Tergolong paling dekat dengan fasilitas pemrosesan komoditas
-   Bahaya banjir tertinggi
-   Terlayani banyak fasilitas kesehatan, swalayan, perguruan tinggi, dan rumah sakit, namun juga tiap unitnya melayani sangat banyak rumah tangga.
-   Kapasitas finansial terbaik, ditandai dengan hanya 15.1% rumah tangga tergolong dalam 40% ekonomi terendah menurut data TNP2K

### Luas dan Demografi

```{r tabel luas dan demografi kota}
create_cluster_summary_tibble(intisari_desk_kec, 3) |> kable()
```

### Tantangan utama

Sebagai daerah dengan kepadatan penduduk yang tinggi, daerah perkotaan rentan dalam hal:

-   Suhu saat ini paling hangat diantara kawasan lainnya, dampak kenaikan suhu 1.43°C akan berdampak signifikan bagi penduduk setempat.
-   Rentan terhadap risiko banjir, mengingat banyak perkotaan dibangun di dekat sungai.
-   Sangat tergantung dengan pasokan pangan dari daerah lain, karena luas lahan yang bisa ditanami paling sedikit dibanding kawasan lainnya.
-   Fasilitas kesehatan dan pendidikan paling banyak dan mudah diakses, namun perlu melayani banyak rumah tangga.

### Deskripsi detil

-   Kegiatan ekonomi di perkotaan cenderung kurang bergantung pada pertanian dibanding daerah lainnya, dicerminkan dengan hanya 32,36% (SD=29,98%) lahan yang bisa ditanami. Indeks kekeringan di daerah ini adalah 0,22 (SD=0,07), lebih baik dibanding daerah sub-urban.
-   Dari segi aksesibilitas, daerah ini unggul dengan jarak rata-rata ke jalan terdekat hanya 0,32 km (SD=0,67 km). Sebanyak 5,72% (SD=14,06%) terlayani irigasi, kedua tertinggi setelah tipologi sub-perkotaan. Jarak ke area yang terbakar dan pabrik pengolahan komoditas adalah 11,64 km (SD=8,09 km) dan 36,83 km (SD=42,31 km), secara berurutan.
-   Jarak rata-rata ke zona deforestasi dan hutan adalah 7,04 km (SD=6,49 km) dan 6,35 km (SD=5,66 km), menunjukkan daerah ini tidak terlalu terisolasi maupun terpapar langsung terhadap faktor-faktor ini. Jarak ke perkebunan dan izin konsesi perkebunan adalah 30,55 km (SD=14,87 km) dan 29,92 km (SD=21,95 km), masing-masing.
-   Dari sisi risiko bencana alam, daerah ini memiliki risiko banjir yang tinggi, ditunjukkan dengan indeks risiko banjir 0,38 (SD=0,2), sedangkan indeks risiko longsor tergolong rendah, yaitu 0,07 (SD=0,17).
-   Selama periode 2015-2020, tingkat deforestasi tergolong rendah, yaitu 0,48% (SD=1,08%). Area pertanian skala kecil mencakup rata-rata 22,96% (SD=26,45%). Sementara itu, luas perkebunan per kecamatan adalah 47,61% (SD=32,02%).
-   Jumlah keluarga di daerah perkotaan adalah 17,422 (SD=11,352), yang paling tinggi di antara kategori lainnya. Rasio layanan kesehatan menunjukkan bahwa satu fasilitas kesehatan melayani rata-rata 2,251 keluarga (SD=1,723). Sebanyak 15.1 % (SD=5.18) dari rumah tangga tergolong dalam 40% ekonomi terendah menurut data TNP2K, paling rendah dibanding tipologi lainnya.
-   Daerah perkotaan memiliki rata-rata curah hujan tahunan sebesar 2,637 mm (SD=406 mm). Suhu rata-rata tahunan di daerah perkotaan adalah 26,58°C (SD=1,42), yang tergolong hangat.
-   Pada tahun 2050, diperkirakan suhu di daerah perkotaan akan meningkat sekitar 1,44°C (SD=0,05). Dalam hal curah hujan, daerah perkotaan diperkirakan akan mengalami penurunan sekitar 43,87 mm (SD=37,84).
:::

::: callout-warning
The analysis was conducted without in-depth knowledge of the region, so the results should be interpreted cautiously.
:::
