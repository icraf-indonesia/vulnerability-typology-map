---
title: "Interpreting clusters"
author: "Dony Indiarto"
format: html
editor: visual
---

# Visualise the cluster on to a map

```{r}
library(terra)
library(sf)
library(leaflet)
library(readxl)
library(janitor)
library(dplyr)
library(readxl)
library(tidyr)
library(tibble)

clusters_sulsel <- st_read("output/tipologi_5_kelas.shp") |> 
   dplyr::select(-c(
  dstnc_t_p ,
  dstnc_t_rd    ,
  dst____  ,
  dstnc_t_f ,
  dstnc_t_rv,
  dstnc_t_b_, dstnc_t_p_
))


# Create a color palette for the 'cluster' variable
pal <- colorFactor(palette = "Set1", domain = clusters_sulsel$cluster)

# Create the leaflet map
leaflet(clusters_sulsel) %>%
  addProviderTiles(providers$OpenStreetMap) %>%
  addPolygons(
    fillColor = ~pal(cluster),
    weight = 0.5,
    opacity = 1,
    color = "white",
    dashArray = "3",
    fillOpacity = 0.7,
    highlight = highlightOptions(
      weight = 5,
      color = "#666",
      dashArray = "",
      fillOpacity = 0.7,
      bringToFront = TRUE
    ),
    label = ~paste0("<strong>Kabupaten: </strong>", nmkab,
                    "<br><strong>Kecamatan: </strong>", nmkec,
                    "<br><strong>Cluster: </strong>", cluster)
  ) %>%
  addLegend(pal = pal, values = ~cluster, title = "Cluster")
```

# Define a nickname for each cluster

**Cluster 1:** Urban areas\
**Cluster 3:** Sub-urban areas\
**Cluster 5:** Sub-rural areas\
**Cluster 4:** Rural areas\
**Cluster 2:** Islands

```{r}
cluster_lookup <- tibble(cluster = as.numeric(c(1,3,5,4,2)), cluster_name = c("Urban areas", "Sub-urban areas", "Sub-rural areas", "Rural areas", "Islands"))

readr::write_csv(cluster_lookup, "cluster_names.csv")
```


# Create a table of mean, std deviation for each class

A table of summary with predictors as rows and each typology class as columns of mean and standard deviation.

```{r}
df_raw <-
  read_xlsx("data/analisa_tipologi_sulsel.xlsx",
            sheet = "fin_copas") |>
  janitor::clean_names() |>
  dplyr::select(-c(idkec_2, idkec_3)) |>
  mutate(across(-c(idkec_dum, sumber, nmprov, nmkab, nmkec), as.numeric)) |>
  dplyr::select(
    idkec_dum,
    distance_to_commodity_processing_factory,
    distance_to_deforestation,
    rasio_pt,
    indeks_bahaya_longsor,
    percentage_of_plantation_area_per_sub_district,
    indeks_bahaya_banjir,
    total_kk_berdasarkan_pengguna_dan_non_pengguna_listrik,
    distance_to_road,
    percentage_deforestation_area_size,
    buffer_to_500m_irigated_land,
    percentage_of_agricultural_area_small_holder_in_the_village,
    erosion_risk_t_ha_1_yr_1,
    distance_to_plantation,
    distance_to_burned_area,
    aridity_index,
    distance_to_forest,
    rasio_minimarket_swalayan,
    rasio_rs,
    arable_land_percent,
    distance_to_plantation_concession,
    distance_to_river,
    rasio_faskes_1
  ) 


polygon_sulsel_df <- clusters_sulsel  |>
  left_join(df_raw, by = join_by(idkc_dm == idkec_dum)) |> 
  drop_na(cluster)
```


# Provide units as an individual column and interpretation as an individual column


```{r}
sulsel_df_long <- polygon_sulsel_df |> 
  sf::st_drop_geometry() |> 
  as_tibble() |>
  select(-(1:7)) |>
  pivot_longer(cols = -cluster,
               # Exclude the 'cluster' column
               names_to = "variable",
               # Name of the new column for variable names
               values_to = "value"    # Name of the new column for values
               ) |>  
  left_join(cluster_lookup, by = "cluster") |> 
  relocate(cluster_name, .after = cluster ) |> 
  dplyr::select(-cluster)

```

# Summarise: predictors as rows and each typology class as columns of mean and standard deviation.
```{r}
sulsel_df_long_summarised <- sulsel_df_long |>
  group_by(cluster_name, variable) |>
  summarise(mean = mean(value, na.rm = TRUE), std_dev = sd(value, na.rm = TRUE)) |> ungroup()

```



```{r}

sulsel_df_wide <- sulsel_df_long_summarised |> 
   mutate(across(where(is.numeric), ~ round(., digits = 3))) |> 
  mutate(value_combined = paste0(mean, " (", std_dev, ")")) |> 
  select(-mean, -std_dev)  |> 
  pivot_wider(
    names_from = cluster_name, 
    values_from = value_combined,
    id_cols = variable
  ) 

lookup_units<- tibble::tribble(~variable, ~units,
                "distance_to_commodity_processing_factory", "metres",
                "distance_to_deforestation", "metres",
                "rasio_pt", "kk/unit",
                "indeks_bahaya_longsor", "nilai indeks",
                "percentage_of_plantation_area_per_sub_district", "percent",
                "indeks_bahaya_banjir", "nilai indeks",
                "total_kk_berdasarkan_pengguna_dan_non_pengguna_listrik", "jumlah kk",
                "distance_to_road", "metres",
                "percentage_deforestation_area_size",  "percent",
                "buffer_to_500m_irigated_land", "% to kecamatan",
                "percentage_of_agricultural_area_small_holder_in_the_village", "percent",
                "erosion_risk_t_ha_1_yr_1", "t ha−1 yr−1",
                "distance_to_plantation", "metres",
                "distance_to_burned_area", "metres",
                "aridity_index", "nilai indeks",
                "distance_to_forest", "metres",
                "rasio_minimarket_swalayan", "kk/unit",
                "rasio_rs", "kk/unit",
                "arable_land_percent",  "percent",
                "distance_to_plantation_concession", "metres",
                "distance_to_river", "metres",
                "rasio_faskes_1", "kk/unit")

summary_table_sulsel <- sulsel_df_wide |> left_join(lookup_units, by = "variable")

```



```{r}
summary_table_sulsel |> readr::write_csv("output/intisari_tipologi_sulsel.csv")
```

